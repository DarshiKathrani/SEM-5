@{
    Layout = "~/Views/Shared/_AuthLayout.cshtml";
}

<div class="auth-header">
    <div class="auth-logo">
        <i class="fas fa-user-plus"></i>
    </div>
    <h1 class="auth-title">Create Account</h1>
    <p class="auth-subtitle">Join FreshMart and start shopping fresh</p>
</div>

@if (ViewBag.Error != null)
{
    <div class="error-message">
        <i class="fas fa-exclamation-circle me-2"></i>
        @ViewBag.Error
    </div>
}

<form method="post" class="auth-form" id="registerForm">
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label class="form-label">Full Name</label>
                <div class="input-wrapper">
                    <i class="fas fa-user input-icon"></i>
                    <input type="text"
                           class="form-control"
                           name="CustomerName"
                           placeholder="Enter your full name"
                           required
                           autocomplete="name" />
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="form-label">Email Address</label>
                <div class="input-wrapper">
                    <i class="fas fa-envelope input-icon"></i>
                    <input type="email"
                           class="form-control"
                           name="Email"
                           placeholder="Enter your email"
                           required
                           autocomplete="email" />
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label class="form-label">Phone Number</label>
                <div class="input-wrapper">
                    <i class="fas fa-phone input-icon"></i>
                    <input type="tel"
                           class="form-control"
                           name="Phone"
                           placeholder="Enter your phone"
                           required
                           autocomplete="tel" />
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="form-label">Role</label>
                <div class="input-wrapper">
                    <i class="fas fa-user-tag input-icon"></i>
                    <select class="form-control" name="Role" required>
                        <option value="">Select your role</option>
                        <option value="User">Customer</option>
                        <option value="Admin">Administrator</option>
                    </select>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <label class="form-label">Address</label>
        <div class="input-wrapper">
            <i class="fas fa-map-marker-alt input-icon"></i>
            <input type="text"
                   class="form-control"
                   name="Address"
                   placeholder="Enter your full address"
                   required
                   autocomplete="street-address" />
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label class="form-label">Password</label>
                <div class="input-wrapper">
                    <i class="fas fa-lock input-icon"></i>
                    <input type="password"
                           class="form-control"
                           name="Password"
                           placeholder="Create a password"
                           required
                           autocomplete="new-password"
                           id="password" />
                </div>
                <div class="password-strength" id="passwordStrength"></div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label class="form-label">Confirm Password</label>
                <div class="input-wrapper">
                    <i class="fas fa-lock input-icon"></i>
                    <input type="password"
                           class="form-control"
                           name="ConfirmPassword"
                           placeholder="Confirm your password"
                           required
                           autocomplete="new-password"
                           id="confirmPassword" />
                </div>
                <div class="password-match" id="passwordMatch"></div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="form-check">
            <input type="checkbox" class="form-check-input" id="agreeTerms" name="AgreeTerms" required>
            <label class="form-check-label" for="agreeTerms">
                I agree to the <a href="#" class="auth-link">Terms of Service</a> and <a href="#" class="auth-link">Privacy Policy</a>
            </label>
        </div>
    </div>

    <button type="submit" class="btn-auth">
        <i class="fas fa-user-plus me-2"></i>
        Create Account
    </button>
</form>

<div class="auth-footer">
    <p class="mb-0">
        Already have an account?
        <a asp-action="Login" asp-controller="Login" class="auth-link">Sign in here</a>
    </p>
</div>

<style>
    .auth-form {
        margin-bottom: 0;
    }

    .input-wrapper {
        position: relative;
    }

    .form-check {
        margin-bottom: 25px;
    }

    .form-check-input {
        width: 18px;
        height: 18px;
        margin-top: 0.25rem;
        border: 2px solid var(--border-color);
        border-radius: 4px;
        transition: all 0.3s ease;
    }

        .form-check-input:checked {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }

        .form-check-input:focus {
            box-shadow: 0 0 0 3px rgba(46, 204, 113, 0.1);
        }

    .form-check-label {
        color: var(--text-dark);
        font-size: 14px;
        font-weight: 500;
        margin-left: 8px;
        cursor: pointer;
        line-height: 1.4;
    }

        .form-check-label a {
            color: var(--primary-color);
            text-decoration: none;
            font-weight: 600;
        }

            .form-check-label a:hover {
                color: var(--secondary-color);
                text-decoration: underline;
            }

    .btn-auth i {
        font-size: 14px;
    }

    .error-message {
        display: flex;
        align-items: center;
        animation: slideInDown 0.3s ease;
    }

    .password-strength {
        margin-top: 8px;
        font-size: 12px;
        font-weight: 500;
    }

        .password-strength.weak {
            color: #e74c3c;
        }

        .password-strength.medium {
            color: #f39c12;
        }

        .password-strength.strong {
            color: var(--primary-color);
        }

    .password-match {
        margin-top: 8px;
        font-size: 12px;
        font-weight: 500;
    }

        .password-match.match {
            color: var(--primary-color);
        }

        .password-match.no-match {
            color: #e74c3c;
        }

    .form-control:invalid {
        border-color: #e74c3c;
    }

    .form-control:valid {
        border-color: var(--primary-color);
    }

    .form-control:focus:invalid {
        box-shadow: 0 0 0 3px rgba(231, 76, 60, 0.1);
    }

    .form-control:focus:valid {
        box-shadow: 0 0 0 3px rgba(46, 204, 113, 0.1);
    }

    @@keyframes slideInDown {
        from

    {
        opacity: 0;
        transform: translateY(-10px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    @@media (max-width: 768px) {
        .row

    {
        margin: 0;
    }

    .col-md-6 {
        padding: 0;
        margin-bottom: 15px;
    }

    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const password = document.getElementById('password');
        const confirmPassword = document.getElementById('confirmPassword');
        const passwordStrength = document.getElementById('passwordStrength');
        const passwordMatch = document.getElementById('passwordMatch');
        const form = document.getElementById('registerForm');
        const submitBtn = document.querySelector('.btn-auth');

        // Password strength checker
        function checkPasswordStrength(pwd) {
            let strength = 0;
            let feedback = [];

            if (pwd.length >= 8) strength++;
            else feedback.push('at least 8 characters');

            if (/[a-z]/.test(pwd)) strength++;
            else feedback.push('lowercase letters');

            if (/[A-Z]/.test(pwd)) strength++;
            else feedback.push('uppercase letters');

            if (/[0-9]/.test(pwd)) strength++;
            else feedback.push('numbers');

            if (/[^A-Za-z0-9]/.test(pwd)) strength++;
            else feedback.push('special characters');

            return { strength, feedback };
        }

        password.addEventListener('input', function() {
            const result = checkPasswordStrength(this.value);
            passwordStrength.className = 'password-strength';

            if (this.value.length === 0) {
                passwordStrength.textContent = '';
                return;
            }

            if (result.strength < 3) {
                passwordStrength.className += ' weak';
                passwordStrength.textContent = `Weak password. Include ${result.feedback.join(', ')}.`;
            } else if (result.strength < 4) {
                passwordStrength.className += ' medium';
                passwordStrength.textContent = 'Medium strength password.';
            } else {
                passwordStrength.className += ' strong';
                passwordStrength.textContent = 'Strong password!';
            }
        });

        // Password match checker
        function checkPasswordMatch() {
            if (confirmPassword.value.length === 0) {
                passwordMatch.textContent = '';
                return;
            }

            if (password.value === confirmPassword.value) {
                passwordMatch.className = 'password-match match';
                passwordMatch.textContent = '✓ Passwords match';
            } else {
                passwordMatch.className = 'password-match no-match';
                passwordMatch.textContent = '✗ Passwords do not match';
            }
        }

        confirmPassword.addEventListener('input', checkPasswordMatch);
        password.addEventListener('input', checkPasswordMatch);

        // Form validation
        const inputs = document.querySelectorAll('.form-control');
        inputs.forEach(input => {
            input.addEventListener('blur', function() {
                if (this.value.trim() !== '') {
                    this.classList.add('is-valid');
                    this.classList.remove('is-invalid');
                } else {
                    this.classList.add('is-invalid');
                    this.classList.remove('is-valid');
                }
            });

            input.addEventListener('input', function() {
                if (this.classList.contains('is-invalid') && this.value.trim() !== '') {
                    this.classList.remove('is-invalid');
                    this.classList.add('is-valid');
                }
            });
        });

        // Form submission
        form.addEventListener('submit', function(e) {
            const passwordValue = password.value;
            const confirmPasswordValue = confirmPassword.value;
            const agreeTerms = document.getElementById('agreeTerms').checked;

            if (passwordValue !== confirmPasswordValue) {
                e.preventDefault();
                passwordMatch.className = 'password-match no-match';
                passwordMatch.textContent = '✗ Passwords do not match';
                return;
            }

            if (!agreeTerms) {
                e.preventDefault();
                alert('Please agree to the Terms of Service and Privacy Policy');
                return;
            }

            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Creating Account...';
            submitBtn.disabled = true;
        });
    });
</script>
