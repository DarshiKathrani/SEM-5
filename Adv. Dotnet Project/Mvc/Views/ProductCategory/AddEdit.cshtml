@model ProductCategoryModel

@{
    ViewData["Title"] = Model.CategoryID == 0 ? "Add Category" : "Edit Category";
}

<style>
    .cat-form-header {
        background: linear-gradient(135deg, #16a34a 0%, #15803d 100%);
        color: white;
        padding: 2rem;
        border-radius: 15px;
        margin-bottom: 2rem;
        box-shadow: 0 8px 32px rgba(21, 128, 61, 0.35);
    }

    .cat-form-card {
        border: none;
        border-radius: 15px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        background: white;
    }

    .cat-form-header-card {
        background: linear-gradient(135deg, #198754 0%, #157347 100%);
        color: white;
        padding: 1.5rem;
        border: none;
    }

    .cat-form-body {
        padding: 2rem;
    }

    .form-label {
        font-weight: 600;
        color: #495057;
        margin-bottom: 0.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .form-control {
        border: 2px solid #e9ecef;
        border-radius: 10px;
        padding: 0.75rem 1rem;
        font-size: 1rem;
        transition: all 0.3s ease;
    }

        .form-control:focus {
            border-color: #16a34a;
            box-shadow: 0 0 0 0.2rem rgba(22, 163, 74, 0.25);
        }

        .form-control.is-valid {
            border-color: #28a745;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%2328a745' d='m2.3 6.73.94-.94 1.88 1.88 3.75-3.75.94.94L4.12 10.5z'/%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right calc(0.375em + 0.1875rem) center;
            background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
        }

        .form-control.is-invalid {
            border-color: #dc3545;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath d='m5.8 4.6 1.4 1.4 1.4-1.4'/%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right calc(0.375em + 0.1875rem) center;
            background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
        }

    .btn-cancel {
        background: #6c757d;
        border: none;
        color: white;
        padding: 0.75rem 2rem;
        border-radius: 10px;
        font-weight: 600;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }

        .btn-cancel:hover {
            background: #5a6268;
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(108, 117, 125, 0.4);
            text-decoration: none;
        }

    .btn-submit {
        background: linear-gradient(135deg, #16a34a 0%, #15803d 100%);
        border: none;
        color: white;
        padding: 0.75rem 2rem;
        border-radius: 10px;
        font-weight: 600;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }

        .btn-submit:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(21, 128, 61, 0.35);
            color: white;
        }

    .form-text {
        color: #6c757d;
        font-size: 0.875rem;
        margin-top: 0.5rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .validation-summary {
        background: linear-gradient(135deg, #f8d7da 0%, #f5c6cb 100%);
        border: 1px solid #f5c6cb;
        border-radius: 10px;
        padding: 1rem;
        margin-bottom: 1.5rem;
    }

    .back-btn {
        background: rgba(255, 255, 255, 0.2);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.3);
        color: white;
        padding: 0.5rem 1.5rem;
        border-radius: 25px;
        font-weight: 600;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }

        .back-btn:hover {
            background: rgba(255, 255, 255, 0.3);
            color: white;
            transform: translateY(-2px);
            text-decoration: none;
        }
</style>

<div class="cat-form-header">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1 class="mb-2">
                <i class="fas @(Model.CategoryID == 0 ? "fa-plus-circle" : "fa-edit") me-2"></i>
                @ViewData["Title"]
            </h1>
            <p class="mb-0 opacity-75">@(Model.CategoryID == 0 ? "Create a new product category" : "Update category information")</p>
        </div>
        <a asp-action="CategoryList" asp-controller="ProductCategory" class="back-btn">
            <i class="fas fa-arrow-left"></i> Back to List
        </a>
    </div>
</div>

<div class="row justify-content-center">
    <div class="col-lg-6">
        <div class="cat-form-card">
            <div class="cat-form-header-card">
                <h5 class="mb-0">
                    <i class="fas fa-th-large me-2"></i>Category Information
                </h5>
            </div>
            <div class="cat-form-body">
                <form asp-action="AddEdit" asp-controller="ProductCategory" method="post">
                    @Html.ValidationSummary(true, "", new { @class = "validation-summary" })

                    <input type="hidden" asp-for="CategoryID" />

                    <div class="row">
                        <div class="col-md-12 mb-4">
                            <label asp-for="CategoryName" class="form-label">
                                <i class="fas fa-tag text-primary"></i>Category Name
                            </label>
                            <input asp-for="CategoryName" class="form-control" placeholder="Enter category name (e.g., Fruits, Vegetables, Dairy)" />
                            <span asp-validation-for="CategoryName" class="text-danger small"></span>
                            <div class="form-text">
                                <i class="fas fa-info-circle text-info"></i>
                                Choose a descriptive name for your product category
                            </div>
                        </div>
                    </div>

                    <div class="d-flex justify-content-between align-items-center">
                        <a asp-action="CategoryList" asp-controller="ProductCategory" class="btn-cancel">
                            <i class="fas fa-times"></i>Cancel
                        </a>
                        <button type="submit" class="btn-submit">
                            <i class="fas @(Model.CategoryID == 0 ? "fa-plus" : "fa-save")"></i>
                            @(Model.CategoryID == 0 ? "Add Category" : "Update Category")
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const inputs = document.querySelectorAll('input.form-control, textarea.form-control');
            inputs.forEach(function (el) {
                el.addEventListener('blur', function () {
                    const val = (el.value || '').trim();
                    if (val.length === 0) {
                        el.classList.remove('is-valid');
                        el.classList.add('is-invalid');
                    } else {
                        el.classList.remove('is-invalid');
                        el.classList.add('is-valid');
                    }
                });

                el.addEventListener('input', function () {
                    if (el.classList.contains('is-invalid') && (el.value || '').trim().length > 0) {
                        el.classList.remove('is-invalid');
                        el.classList.add('is-valid');
                    }
                });
            });
        });
    </script>
}