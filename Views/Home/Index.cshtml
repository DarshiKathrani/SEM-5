@model dynamic
@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var recentOrders = ViewBag.RecentOrders as List<GroceryMvc.Models.OrderModel>;
}

<style>
    .dash-header {
        background: linear-gradient(135deg, #2ecc71, #27ae60);
        border-radius: 16px;
        padding: 22px 24px;
        color: #fff;
        box-shadow: 0 10px 24px rgba(39, 174, 96, .25);
    }

    .dash-updated-chip {
        background: rgba(255,255,255,.15);
        border: 1px solid rgba(255,255,255,.25);
        color: #f8f9fa;
        padding: 6px 10px;
        border-radius: 999px;
        font-size: 12px;
        backdrop-filter: blur(6px);
    }

    .metric-card {
        border: 0;
        border-radius: 16px;
        height: 100%;
        box-shadow: 0 8px 18px rgba(0,0,0,.08);
        transition: transform .2s ease, box-shadow .2s ease;
    }

        .metric-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 14px 28px rgba(0,0,0,.12);
        }

    .metric-icon {
        width: 44px;
        height: 44px;
        border-radius: 10px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        color: #fff;
        font-size: 18px;
        box-shadow: inset 0 0 0 1px rgba(255,255,255,.25);
    }

    .icon-primary {
        background: linear-gradient(135deg, #3b82f6, #2563eb);
    }

    .icon-success {
        background: linear-gradient(135deg, #22c55e, #16a34a);
    }

    .icon-warning {
        background: linear-gradient(135deg, #f59e0b, #d97706);
    }

    .icon-danger {
        background: linear-gradient(135deg, #ef4444, #dc2626);
    }

    .metric-label {
        letter-spacing: .4px;
        font-size: 12px;
        color: #6b7280;
        text-transform: uppercase;
    }

    .metric-value {
        font-size: 28px;
        font-weight: 700;
        color: #111827;
    }

    .card-header.bg-light {
        background: #f8fafc !important;
        border-bottom: 1px solid #edf2f7;
    }

    .table thead.table-dark th {
        background: #111827 !important;
    }

    .badge.rounded-pill {
        padding: 8px 10px;
    }

    .chart-legend {
        font-size: 12px;
        color: #6b7280;
    }

    @@media (max-width: 767px) {
        .metric-value {
            font-size: 24px;
        }
    }
</style>

<div class="container-fluid py-4">

    <!-- Dashboard Header -->
    <div class="dash-header d-flex flex-column flex-md-row align-items-md-center justify-content-between mb-4">
        <div>
            <h2 class="fw-bold mb-1">📊 Dashboard Overview</h2>
            <div class="chart-legend">Track store health, sales trends, products and orders at a glance</div>
        </div>
        <span class="dash-updated-chip mt-3 mt-md-0">Updated: @DateTime.Now.ToString("dd-MMM-yyyy hh:mm tt")</span>
    </div>

    <!-- Summary Cards -->
    <div class="row g-4 mb-5">
        <div class="col-6 col-md-3">
            <div class="card metric-card p-3">
                <div class="d-flex align-items-center justify-content-between">
                    <span class="metric-label">Total Customers</span>
                    <span class="metric-icon icon-primary"><i class="bi bi-people"></i></span>
                </div>
                <div class="metric-value mt-2">@ViewBag.TotalCustomers</div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="card metric-card p-3">
                <div class="d-flex align-items-center justify-content-between">
                    <span class="metric-label">Total Orders</span>
                    <span class="metric-icon icon-success"><i class="bi bi-bag-check"></i></span>
                </div>
                <div class="metric-value mt-2">@ViewBag.TotalOrders</div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="card metric-card p-3">
                <div class="d-flex align-items-center justify-content-between">
                    <span class="metric-label">Categories</span>
                    <span class="metric-icon icon-warning"><i class="bi bi-grid"></i></span>
                </div>
                <div class="metric-value mt-2">@ViewBag.TotalCategories</div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="card metric-card p-3">
                <div class="d-flex align-items-center justify-content-between">
                    <span class="metric-label">Products</span>
                    <span class="metric-icon icon-danger"><i class="bi bi-box-seam"></i></span>
                </div>
                <div class="metric-value mt-2">@ViewBag.TotalProducts</div>
            </div>
        </div>
    </div>

    <!-- Monthly Sales Chart -->
    <div class="card shadow-sm mb-5">
        <div class="card-header bg-light">
            <h5 class="mb-0 fw-bold">📈 Monthly Sales</h5>
        </div>
        <div class="card-body">
            <canvas id="salesChart" height="120"></canvas>
        </div>
    </div>

    <!-- Top Products + Low Stock -->
    <div class="row g-4 mb-5">
        <!-- Top Products -->
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="mb-0 fw-bold">🏆 Top 5 Selling Products</h5>
                </div>
                <div class="card-body">
                    <table class="table table-hover align-middle">
                        <thead class="table-dark">
                            <tr>
                                <th>Product Name</th>
                                <th class="text-center">Total Quantity Sold</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in ViewBag.TopProducts as List<GroceryMvc.Models.TopProductDto>)
                            {
                                <tr>
                                    <td>@item.ProductName</td>
                                    <td class="text-center fw-bold">@item.TotalQuantity</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Low Stock Alerts -->
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="mb-0 fw-bold">⚠️ Low Stock Alerts</h5>
                </div>
                <div class="card-body">
                    <ul class="list-group">
                        @foreach (var item in ViewBag.LowStockProducts as List<GroceryMvc.Models.LowStockProductDto>)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <span class="d-flex align-items-center gap-2">
                                    <span class="bullet bg-danger" style="width:10px;height:10px;border-radius:50%;display:inline-block"></span>
                                    @item.ProductName
                                </span>
                                <span class="badge rounded-pill @(item.StockQuantity <= 5 ? "bg-danger" : "bg-warning text-dark")">
                                    @item.StockQuantity left
                                </span>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Orders -->
    <div class="card shadow-sm mb-5">
        <div class="card-header bg-light">
            <h5 class="mb-0 fw-bold">🛒 Recent Orders</h5>
        </div>
        <div class="card-body">
            <table class="table table-striped table-bordered align-middle">
                <thead class="table-dark">
                    <tr>
                        <th>Order ID</th>
                        <th>Customer</th>
                        <th>Order Date</th>
                        <th>Total Amount</th>
                    </tr>
                </thead>
                <tbody>
                    @if (recentOrders != null && recentOrders.Any())
                    {
                        foreach (var order in recentOrders)
                        {
                            <tr>
                                <td>#@order.OrderID</td>
                                <td>@order.CustomerName</td>
                                <td>@order.OrderDate.ToString("dd-MMM-yyyy")</td>
                                <td class="fw-bold">₹@order.TotalAmount</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="4" class="text-center text-muted">No recent orders found.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        var salesData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.MonthlySales));
        var labels = salesData.map(item => item.Month + "/" + item.Year);
        var data = salesData.map(item => item.TotalSales);

        var ctx = document.getElementById('salesChart').getContext('2d');
        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Total Sales',
                    data: data,
                    backgroundColor: ctx.createLinearGradient(0, 0, 0, 300),
                    borderColor: 'rgba(59, 130, 246, 1)',
                    borderWidth: 1,
                    borderRadius: 8,
                    maxBarThickness: 36
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { display: true, position: 'top' },
                    tooltip: {
                        backgroundColor: 'rgba(17,24,39,.95)',
                        padding: 12,
                        borderColor: '#1f2937',
                        borderWidth: 1,
                        titleColor: '#fff',
                        bodyColor: '#e5e7eb'
                    }
                },
                scales: {
                    y: { beginAtZero: true, grid: { color: 'rgba(0,0,0,.05)' } },
                    x: { grid: { display: false } }
                }
            }
        });

        // apply gradient fill after chart instantiation
        const gradient = ctx.createLinearGradient(0, 0, 0, 260);
        gradient.addColorStop(0, 'rgba(59, 130, 246, 0.7)');
        gradient.addColorStop(1, 'rgba(59, 130, 246, 0.15)');
        const chart = Chart.getChart(ctx);
        if (chart) {
            chart.data.datasets[0].backgroundColor = gradient;
            chart.update();
        }
    </script>
}
