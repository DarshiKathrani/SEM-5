*** Begin Patch
*** Update File: Views/Customer/Index.cshtml
@@
-    <script>
         -        // 🔍 Trigger search on button click
         -        $("#searchBtn").on("click", function () {
         -            let term = $("#searchBox").val();
         -
         -            $.ajax({
         -                url: '@Url.Action("Search", "Customer")', // MVC Controller
         -                type: "GET",
         -                data: { searchTerm: term },
         -                success: function (result) {
         -                    if (result.success) {
         -                        var tbody = $("#customerTable tbody");
         -                        tbody.empty();
         -
         -                        result.data.forEach(function (customer) {
         -                            var row = `
         -                                <tr>
         -                                    <td>${customer.customerName}</td>
         -                                    <td>${customer.email}</td>
         -                                    <td>${customer.address}</td>
         -                                    <td>${customer.phone ?? ""}</td>
         -                                    <td>
         -                                        <a href="/Customer/AddEdit/${customer.customerID}" class="btn btn-sm btn-outline-success me-1" title="Edit">
         -                                            <i class="fas fa-edit"></i>
         -                                        </a>
         -                                        <a href="/Customer/Delete/${customer.customerID}" class="btn btn-sm btn-outline-danger" title="Delete" onclick="return confirm('Are you sure you want to delete this order?');">
         -                                            <i class="fas fa-trash"></i>
         -                                        </a>
         -                                    </td>
         -                                </tr>
         -                            `;
         -                            tbody.append(row);
         -                        });
         -                    } else {
         -                        alert(result.message);
         -                    }
         -                }
         -            });
         -        });
         -
         -        //  Optional: Trigger search on typing (live search)
         -        $("#searchBox").on("keyup", function () {
         -            $("#searchBtn").click();
         -        });
         -    </script>
+   < script>
         +        // debounced search + loading state
         +        (function () {
         +            const $btn = $("#searchBtn");
         +            const $label = $btn.find('.search-label');
         +            const $loading = $btn.find('.search-loading');
         +            const $box = $("#searchBox");
         +            let debounceTimer = null;
         +
         +            function setLoading(isLoading) {
         +                if (isLoading) {
         +                    $label.addClass('d-none');
         +                    $loading.removeClass('d-none');
         +                    $btn.prop('disabled', true);
         +                } else {
         +                    $loading.addClass('d-none');
         +                    $label.removeClass('d-none');
         +                    $btn.prop('disabled', false);
         +                }
         +            }
         +
         +            function renderRows(list) {
         +                const tbody = $("#customerTable tbody");
         +                tbody.empty();
         +                if (!list || list.length === 0) {
         +                    tbody.append('<tr><td colspan="5" class="text-center text-muted">No customers found.</td></tr>');
         +                    return;
         +                }
         +                list.forEach(function (customer) {
         +                    const phone = customer.phone ? customer.phone : '';
         +                    const row = `
         +                        <tr>
         +                            <td>${customer.customerName}</td>
         +                            <td>${customer.email}</td>
         +                            <td>${customer.address}</td>
         +                            <td>${phone}</td>
         +                            <td>
         +                                <a href="/Customer/AddEdit/${customer.customerID}" class="btn btn-outline-success btn-icon me-1" title="Edit" data-bs-toggle="tooltip" data-bs-title="Edit">
         +                                    <i class="fas fa-edit"></i>
         +                                </a>
         +                                <a href="/Customer/Delete/${customer.customerID}" class="btn btn-outline-danger btn-icon" title="Delete" data-bs-toggle="tooltip" data-bs-title="Delete" onclick="return confirm('Are you sure you want to delete this customer?');">
         +                                    <i class="fas fa-trash"></i>
         +                                </a>
         +                            </td>
         +                        </tr>`;
         +                    tbody.append(row);
         +                });
         +                // re-enable tooltips on new elements
         +                var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
         +                tooltipTriggerList.map(function (tooltipTriggerEl) { return new bootstrap.Tooltip(tooltipTriggerEl); });
         +            }
         +
         +            function doSearch() {
         +                const term = $box.val();
         +                setLoading(true);
         +                $.ajax({
         +                    url: '@Url.Action("Search", "Customer")',
         +                    type: 'GET',
         +                    data: { searchTerm: term },
         +                    success: function (result) {
         +                        if (result && result.success) {
         +                            renderRows(result.data || []);
         +                        } else {
         +                            renderRows([]);
         +                        }
         +                    },
         +                    error: function () {
         +                        renderRows([]);
         +                    },
         +                    complete: function () { setLoading(false); }
         +                });
         +            }
         +
         +            $btn.on('click', doSearch);
         +            $box.on('keyup', function () {
         +                clearTimeout(debounceTimer);
         +                debounceTimer = setTimeout(doSearch, 300);
         +            });
         +        })();
         +    </script>
*** End Patchscript src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    // debounced search + loading state
    (function () {
        const $btn = $("#searchBtn");
        const $label = $btn.find('.search-label');
        const $loading = $btn.find('.search-loading');
        const $box = $("#searchBox");
        let debounceTimer = null;

        function setLoading(isLoading) {
            if (isLoading) {
                $label.addClass('d-none');
                $loading.removeClass('d-none');
                $btn.prop('disabled', true);
            } else {
                $loading.addClass('d-none');
                $label.removeClass('d-none');
                $btn.prop('disabled', false);
            }
        }

        function renderRows(list) {
            const tbody = $("#customerTable tbody");
            tbody.empty();
            if (!list || list.length === 0) {
                tbody.append('<tr><td colspan="5" class="text-center text-muted">No customers found.</td></tr>');
                return;
            }
            list.forEach(function (customer) {
                const phone = customer.phone ? customer.phone : '';
                const row = `
                    <tr>
                        <td>${customer.customerName}</td>
                        <td>${customer.email}</td>
                        <td>${customer.address}</td>
                        <td>${phone}</td>
                        <td>
                            <a href="/Customer/AddEdit/${customer.customerID}" class="btn btn-outline-success btn-icon me-1" title="Edit" data-bs-toggle="tooltip" data-bs-title="Edit">
                                <i class="fas fa-edit"></i>
                            </a>
                            <a href="/Customer/Delete/${customer.customerID}" class="btn btn-outline-danger btn-icon" title="Delete" data-bs-toggle="tooltip" data-bs-title="Delete" onclick="return confirm('Are you sure you want to delete this customer?');">
                                <i class="fas fa-trash"></i>
                            </a>
                        </td>
                    </tr>`;
                tbody.append(row);
            });
            // re-enable tooltips on new elements
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.map(function (tooltipTriggerEl) { return new bootstrap.Tooltip(tooltipTriggerEl); });
        }

        function doSearch() {
            const term = $box.val();
            setLoading(true);
            $.ajax({
                url: '@Url.Action("Search", "Customer")',
                type: 'GET',
                data: { searchTerm: term },
                success: function (result) {
                    if (result && result.success) {
                        renderRows(result.data || []);
                    } else {
                        renderRows([]);
                    }
                },
                error: function () {
                    renderRows([]);
                },
                complete: function () { setLoading(false); }
            });
        }

        $btn.on('click', doSearch);
        $box.on('keyup', function () {
            clearTimeout(debounceTimer);
            debounceTimer = setTimeout(doSearch, 300);
        });
    })();
</script>
<script>
    // enable bootstrap tooltips
    document.addEventListener('DOMContentLoaded', function () {
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        tooltipTriggerList.map(function (tooltipTriggerEl) { return new bootstrap.Tooltip(tooltipTriggerEl); });
    });
</script>
}
