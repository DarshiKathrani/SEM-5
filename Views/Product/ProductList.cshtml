@model List<ProductModel>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show">
        <i class="fas fa-check-circle me-2"></i>
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show">
        <i class="fas fa-exclamation-triangle me-2"></i>
        @TempData["ErrorMessage"]
    </div>
}

<style>
    .prod-header {
        background: linear-gradient(135deg, #16a34a 0%, #15803d 100%);
        color: white;
        padding: 2rem;
        border-radius: 15px;
        margin-bottom: 2rem;
        box-shadow: 0 8px 32px rgba(21, 128, 61, 0.35);
    }
    
    .page-chip {
        background: rgba(255, 255, 255, 0.2);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.3);
        color: white;
        font-weight: 600;
        padding: 0.5rem 1rem;
        border-radius: 25px;
    }
    
    .search-container {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 15px;
        padding: 1.5rem;
        margin-bottom: 2rem;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }
    
    .search-input {
        border: 2px solid #e9ecef;
        border-radius: 25px;
        padding: 0.75rem 1.5rem;
        font-size: 1rem;
        transition: all 0.3s ease;
    }
    
    .search-input:focus {
        border-color: #16a34a;
        box-shadow: 0 0 0 0.2rem rgba(22, 163, 74, 0.25);
    }
    
    .search-btn {
        border-radius: 25px;
        padding: 0.75rem 2rem;
        font-weight: 600;
        background: linear-gradient(135deg, #16a34a 0%, #15803d 100%);
        border: none;
        transition: all 0.3s ease;
    }
    
    .search-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(21, 128, 61, 0.35);
    }
    
    .product-card {
        border: none;
        border-radius: 15px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        transition: all 0.3s ease;
        overflow: hidden;
    }
    
    .product-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
    }
    
    .product-header {
        background: linear-gradient(135deg, #198754 0%, #157347 100%);
        color: white;
        padding: 1.5rem;
        border: none;
    }
    
    .product-table {
        margin: 0;
    }
    
    .product-table thead th {
        background: #f8f9fa;
        border: none;
        font-weight: 600;
        color: #495057;
        padding: 1rem;
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }
    
    .product-table tbody tr {
        transition: all 0.3s ease;
        border: none;
    }
    
    .product-table tbody tr:hover {
        background: linear-gradient(135deg, rgba(22, 163, 74, 0.05) 0%, rgba(21, 128, 61, 0.05) 100%);
        transform: scale(1.01);
    }
    
    .product-table tbody td {
        padding: 1rem;
        border: none;
        vertical-align: middle;
    }
    
    .product-badge {
        background: #198754;
        color: #ffffff;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.85rem;
    }
    
    .stock-badge {
        background: #198754;
        color: #ffffff;
        padding: 0.4rem 0.8rem;
        border-radius: 15px;
        font-weight: 600;
        font-size: 0.8rem;
    }
    
    .btn-icon {
        width: 35px;
        height: 35px;
        border-radius: 50%;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
        border: 2px solid transparent;
    }
    
    .btn-icon:hover {
        transform: scale(1.1);
    }
    
    .btn-edit {
        background: linear-gradient(135deg, #198754 0%, #157347 100%);
        color: #ffffff;
        border-color: #198754;
    }
    
    .btn-edit:hover {
        background: linear-gradient(135deg, #157347 0%, #146c3a 100%);
        color: #ffffff;
        box-shadow: 0 4px 15px rgba(25, 135, 84, 0.4);
    }
    
    .btn-delete {
        background: linear-gradient(135deg, #dc3545 0%, #b02a37 100%);
        color: #ffffff;
        border-color: #dc3545;
    }
    
    .btn-delete:hover {
        background: linear-gradient(135deg, #c82333 0%, #a71e2a 100%);
        color: #ffffff;
        box-shadow: 0 4px 15px rgba(220, 53, 69, 0.4);
    }
    
    .empty-state {
        text-align: center;
        padding: 3rem 2rem;
        color: #6c757d;
    }
    
    .empty-state i {
        font-size: 4rem;
        margin-bottom: 1rem;
        opacity: 0.5;
    }
    
    .add-product-btn {
        background: linear-gradient(135deg, #16a34a 0%, #15803d 100%);
        border: none;
        color: white;
        padding: 0.75rem 2rem;
        border-radius: 25px;
        font-weight: 600;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
    }
    
    .add-product-btn:hover {
        color: white;
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(21, 128, 61, 0.35);
        text-decoration: none;
    }
</style>

<div class="prod-header">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1 class="mb-2"><i class="fas fa-box me-2"></i>Product Management</h1>
            <p class="mb-0 opacity-75">Manage your product inventory and stock levels</p>
        </div>
        <span class="page-chip">@DateTime.Now.ToString("dd MMM yyyy")</span>
    </div>
</div>

<div class="search-container">
    <div class="row align-items-center">
        <div class="col-md-8">
            <div class="input-group">
                <span class="input-group-text bg-transparent border-0">
                    <i class="fas fa-search text-muted"></i>
                </span>
                <input type="text" id="productSearchBox" class="form-control search-input" placeholder="Search products by name or category..." />
                <button id="productSearchBtn" class="btn search-btn ms-2">Search</button>
            </div>
        </div>
        <div class="col-md-4 text-end">
            <a asp-action="AddEdit" asp-controller="Product" class="add-product-btn">
                <i class="fas fa-plus"></i> Add Product
            </a>
        </div>
    </div>
</div>

<div class="product-card">
    <div class="product-header">
        <h5 class="mb-0">
            <i class="fas fa-boxes me-2"></i>Product Inventory
        </h5>
    </div>
    <div class="card-body p-0">
        <div class="table-responsive">
            <table id="productsTable" class="table product-table">
                <thead>
                    <tr>
                        <th><i class="fas fa-id-badge me-1"></i>Product ID</th>
                        <th><i class="fas fa-shopping-bag me-1"></i>Product Name</th>
                        <th><i class="fas fa-tag me-1"></i>Category</th>
                        <th><i class="fas fa-dollar-sign me-1"></i>Price</th>
                        <th><i class="fas fa-chart-line me-1"></i>Used Stock</th>
                        <th><i class="fas fa-warehouse me-1"></i>Remaining Stock</th>
                        <th class="text-center"><i class="fas fa-cogs me-1"></i>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        foreach (var item in Model)
                        {
                            <tr>
                                <td><span class="product-badge">#@item.ProductID</span></td>
                                <td class="fw-bold text-dark">@item.ProductName</td>
                                <td>@item.CategoryName</td>
                                <td class="fw-bold text-success">$@item.Price.ToString("0.00")</td>
                                <td><span class="stock-badge">@item.UsedStock</span></td>
                                <td><span class="stock-badge">@item.RemainingStock</span></td>
                                <td class="text-center">
                                    <a asp-action="AddEdit" asp-controller="Product" asp-route-id="@item.ProductID" class="btn btn-icon btn-edit me-1" title="Edit" data-bs-toggle="tooltip" data-bs-title="Edit">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a asp-action="Delete" asp-controller="Product" asp-route-id="@item.ProductID" class="btn btn-icon btn-delete" title="Delete" data-bs-toggle="tooltip" data-bs-title="Delete" onclick="return confirm('Are you sure you want to delete this product?');">
                                        <i class="fas fa-trash"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7" class="empty-state">
                                <i class="fas fa-box"></i>
                                <h5>No products found</h5>
                                <p class="text-muted">Start by adding your first product.</p>
                                <a asp-action="AddEdit" asp-controller="Product" class="add-product-btn">
                                    <i class="fas fa-plus me-2"></i>Add First Product
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        // Initialize tooltips
        document.addEventListener('DOMContentLoaded', function() {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });

        // Enhanced search with debouncing and loading state
        (function () {
            const $searchBox = $("#productSearchBox");
            let debounceTimer = null;

            function renderRows(products) {
                const tbody = $("#productsTable tbody");
                tbody.empty();
                
                if (!products || products.length === 0) {
                    tbody.append(`
                        <tr>
                            <td colspan="7" class="empty-state">
                                <i class="fas fa-box"></i>
                                <h5>No products found</h5>
                                <p class="text-muted">Try adjusting your search criteria.</p>
                            </td>
                        </tr>
                    `);
                    return;
                }

                products.forEach(function (product) {
                    const row = `
                        <tr>
                            <td><span class="product-badge">#${product.productID}</span></td>
                            <td class="fw-bold text-dark">${product.productName}</td>
                            <td>${product.categoryName}</td>
                            <td class="fw-bold text-success">$${product.price.toFixed(2)}</td>
                            <td><span class="stock-badge">${product.usedStock}</span></td>
                            <td><span class="stock-badge">${product.remainingStock}</span></td>
                            <td class="text-center">
                                <a href="/Product/AddEdit/${product.productID}" class="btn btn-icon btn-edit me-1" title="Edit" data-bs-toggle="tooltip" data-bs-title="Edit">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <a href="/Product/Delete/${product.productID}" class="btn btn-icon btn-delete" title="Delete" data-bs-toggle="tooltip" data-bs-title="Delete" onclick="return confirm('Are you sure you want to delete this product?');">
                                    <i class="fas fa-trash"></i>
                                </a>
                            </td>
                        </tr>`;
                    tbody.append(row);
                });
                
                // Re-initialize tooltips for new elements
                var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
                tooltipTriggerList.map(function (tooltipTriggerEl) { return new bootstrap.Tooltip(tooltipTriggerEl); });
            }

            function doSearch() {
                const term = $searchBox.val();
                
                $.ajax({
                    url: '@Url.Action("Search", "Product")',
                    type: "GET",
                    data: { searchTerm: term },
                    success: function (result) {
                        if (result && result.success) {
                            renderRows(result.data || []);
                        } else {
                            renderRows([]);
                        }
                    },
                    error: function () {
                        renderRows([]);
                    }
                });
            }

            // Click to search
            $("#productSearchBtn").on('click', function(){ doSearch(); });

            // Debounced search on typing
            $searchBox.on('keyup', function () {
                clearTimeout(debounceTimer);
                debounceTimer = setTimeout(doSearch, 300);
            });
        })();
    </script>
}
